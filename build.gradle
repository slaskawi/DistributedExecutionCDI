// setup the Spring Dependency Management Plugin for Gradle, to import BOMs.
plugins {
    id "io.spring.dependency-management" version "0.6.0.RELEASE"
    id "java"
}

repositories {
    mavenCentral()
}

ext {
    deltaspikeVersion = '1.7.2'
    commons_ioVersion = '2.5'
    mysqlVersion = '5.1.40'
    log4jVersion = '2.7'
    nettyVersion = '4.1.6.Final'
    weldVersion = '2.4.1.Final'
    hibernate_ormVersion = '5.1.3.Final'
    hibernate_ogmVersion = '5.1.0.Beta3'
    hibernate_searchVersion = '5.6.0.CR1'
    infinispanVersion = '8.2.5.Final'
    resteasyVersion = '3.0.19.Final'
    cdi_apiVersion = '1.2'
    jboss_ejb_api_3_2_specVersion = '1.0.0.Final'
    jboss_jaxrs_api_2_0_specVersion = '1.0.0.Final'
    jsr305Version = '3.0.1'
    jcip_annotationsVersion = '1.0'
    cache_apiVersion = '1.0.0'
}

dependencyManagement {
    imports {
        mavenBom "org.apache.deltaspike.distribution:distributions-bom:${deltaspikeVersion}"
    }
}

dependencies {
    compile "org.apache.deltaspike.core:deltaspike-core-api"
    runtime "org.apache.deltaspike.core:deltaspike-core-impl"
    compile "org.apache.deltaspike.cdictrl:deltaspike-cdictrl-api"
    runtime "org.apache.deltaspike.cdictrl:deltaspike-cdictrl-weld"

    compile "mysql:mysql-connector-java:${mysqlVersion}"

    compile "org.apache.logging.log4j:log4j-api:${log4jVersion}"
    runtime "org.apache.logging.log4j:log4j-core:${log4jVersion}"

    compile "io.netty:netty-all:${nettyVersion}"

    compile "org.jboss.weld.se:weld-se:${weldVersion}"

    compile "org.hibernate.javax.persistence:hibernate-jpa-2.1-api"
    compile "org.hibernate:hibernate-entitymanager:${hibernate_ormVersion}"
    compile "org.hibernate:hibernate-spatial:${hibernate_ormVersion}"
    compile "org.hibernate:hibernate-search:${hibernate_searchVersion}"

    compile "com.google.code.findbugs:jsr305:${jsr305Version}"
    compile "net.jcip:jcip-annotations:${jcip_annotationsVersion}"
    compile "javax.cache:cache-api:${cache_apiVersion}"

    compile group: "org.infinispan", name: "infinispan-embedded", version: infinispanVersion, transitive: false
    compile group: "org.infinispan", name: "infinispan-embedded-query", version: infinispanVersion, transitive: false

    testCompile group: "junit", name: "junit", version: "4.11"
}

sourceSets {
    main {
        //To use standard bean discovery mechanisms, CDI expects beans.xml to be in your classes directory
        output.resourcesDir = output.classesDir
    }
    test {
        output.resourcesDir = output.classesDir
    } // and any other sourceSet you might have.
}

group 'co.kaiba.blueeyes'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8